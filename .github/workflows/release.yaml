name: Release
run-name: ${{ github.actor }} is releasing a new version 🚀
on:
  pull_request:
    paths-ignore:
      - 'example/**'
  push:
    branches:
      - master
    paths:
      - 'src/**'
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🧲
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies 📦
        run: yarn install --frozen-lockfile
      - name: Lint 🧹
        run: yarn lint
  deploy:
    name: Deploy
    needs: lint
    if: github.event.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🧲
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build 🪛
        run: yarn buil
      - name: Install dependencies 📦
        run: yarn install --frozen-lockfile
      - name: Decode .env
        run: echo "${{ secrets.ENV_FILE_BASE64 }}" | base64 -d > .env
      - name: SSH Copy
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "dist,.env,package.json"
          target: "backend"
      - name: SSH Restart
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd backend
            yarn --production --frozen-lockfile
            pm2 delete "backend"
            pm2 start --name "backend" yarn -- start:prod
  release:
    name: Release
    needs: lint
    if: github.event.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🧲
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Release 🪄🎁
        if: ${{ github.ref == 'refs/heads/main' }}
        run: yarn semantic-release
      
